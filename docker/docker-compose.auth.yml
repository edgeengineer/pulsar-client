services:
  pulsar-auth:
    image: apachepulsar/pulsar:3.2.0
    container_name: pulsar-auth
    ports:
      - "6651:6650"
      - "8081:8080"
    environment:
      - PULSAR_MEM=-Xms512m -Xmx512m -XX:MaxDirectMemorySize=1g
      - PULSAR_STANDALONE_USE_ZOOKEEPER=true
      - PULSAR_STANDALONE_RESET=true
    command: |
      bash -lc '
        set -e
        # Generate keys for token authentication
        bin/pulsar tokens create-secret-key --output /pulsar/conf/secret.key
        bin/pulsar tokens create --secret-key /pulsar/conf/secret.key --subject admin > /pulsar/conf/admin.token
        bin/pulsar tokens create --secret-key /pulsar/conf/secret.key --subject client > /pulsar/conf/client.token
        
        # Atomically create auth config snippet
        ADMIN_TOKEN=$(cat /pulsar/conf/admin.token | xargs)
        cat >/pulsar/conf/auth-settings.conf <<EOF
        authenticationEnabled=true
        authorizationEnabled=true
        authenticationProviders=org.apache.pulsar.broker.authentication.AuthenticationProviderToken
        brokerClientAuthenticationPlugin=org.apache.pulsar.client.impl.auth.AuthenticationToken
        brokerClientAuthenticationParameters=token:\${ADMIN_TOKEN}
        tokenSecretKey=file:///pulsar/conf/secret.key
        superUserRoles=admin
        EOF
        
        # Append to main config and start
        cat /pulsar/conf/auth-settings.conf >> /pulsar/conf/standalone.conf
        bin/pulsar standalone
      '
    # Health probed in CI via curl with token; omit container healthcheck to avoid act race
    tmpfs:
      - /pulsar/data:rw,noexec,nosuid,size=1g
      - /pulsar/conf:rw,noexec,nosuid,size=100m
    networks:
      - pulsar-net
    restart: unless-stopped

networks:
  pulsar-net:
    driver: bridge